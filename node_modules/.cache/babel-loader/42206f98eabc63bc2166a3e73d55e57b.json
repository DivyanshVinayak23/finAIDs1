{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\Documents\\\\GitHub\\\\dt-money\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Dashboard } from './components/Dashboard';\nimport { Header } from './components/Header';\nimport { GlobalStyle } from './styles/global';\nimport Modal from 'react-modal';\nimport { NewTransactionModal } from './components/NewTransactionModal';\nimport { TransactionsProvider } from '../src/hooks/useTransactions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nexport function App() {\n  _s();\n\n  const [isNewTransactionModalOpen, setIsNewTransactionModalOpen] = useState(false);\n\n  function handleOpenIsTransactionModal() {\n    setIsNewTransactionModalOpen(true);\n  }\n\n  function handleCloseIsTransactionModal() {\n    setIsNewTransactionModalOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TransactionsProvider, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onOpenNewTransactionModal: handleOpenIsTransactionModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTransactionModal, {\n      isOpen: isNewTransactionModalOpen,\n      onRequestClose: handleCloseIsTransactionModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YWa5Wmz82gI4ha22AwMdN+zJHN8=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Dashboard","Header","GlobalStyle","Modal","NewTransactionModal","TransactionsProvider","setAppElement","App","isNewTransactionModalOpen","setIsNewTransactionModalOpen","handleOpenIsTransactionModal","handleCloseIsTransactionModal"],"sources":["C:/Users/divya/Documents/GitHub/dt-money/src/App.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { Dashboard } from './components/Dashboard';\r\nimport { Header } from './components/Header';\r\nimport { GlobalStyle } from './styles/global';\r\nimport Modal from 'react-modal';\r\nimport { NewTransactionModal } from './components/NewTransactionModal';\r\nimport { TransactionsProvider } from '../src/hooks/useTransactions';\r\n\r\nModal.setAppElement('#root');\r\n\r\nexport function App() {\r\n  const [isNewTransactionModalOpen, setIsNewTransactionModalOpen] = useState(false); \r\n    \r\n    function handleOpenIsTransactionModal() {\r\n        setIsNewTransactionModalOpen(true);\r\n    }\r\n\r\n    function handleCloseIsTransactionModal() {\r\n        setIsNewTransactionModalOpen(false);\r\n    }\r\n\r\n  return (\r\n    <TransactionsProvider>\r\n      <Header onOpenNewTransactionModal={handleOpenIsTransactionModal}/>\r\n      <Dashboard />\r\n      <NewTransactionModal \r\n        isOpen={isNewTransactionModalOpen}\r\n        onRequestClose={handleCloseIsTransactionModal} />\r\n      <GlobalStyle />\r\n    </TransactionsProvider>\r\n  );\r\n}"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,kCAApC;AACA,SAASC,oBAAT,QAAqC,8BAArC;;AAEAF,KAAK,CAACG,aAAN,CAAoB,OAApB;AAEA,OAAO,SAASC,GAAT,GAAe;EAAA;;EACpB,MAAM,CAACC,yBAAD,EAA4BC,4BAA5B,IAA4DV,QAAQ,CAAC,KAAD,CAA1E;;EAEE,SAASW,4BAAT,GAAwC;IACpCD,4BAA4B,CAAC,IAAD,CAA5B;EACH;;EAED,SAASE,6BAAT,GAAyC;IACrCF,4BAA4B,CAAC,KAAD,CAA5B;EACH;;EAEH,oBACE,QAAC,oBAAD;IAAA,wBACE,QAAC,MAAD;MAAQ,yBAAyB,EAAEC;IAAnC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,mBAAD;MACE,MAAM,EAAEF,yBADV;MAEE,cAAc,EAAEG;IAFlB;MAAA;MAAA;MAAA;IAAA,QAHF,eAME,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GArBeJ,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}